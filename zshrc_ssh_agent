AGENT_SOCKET=$HOME/.ssh/.ssh-agent-socket
AGENT_INFO=$HOME/.ssh/.ssh-agent-info

SSH_AGENT_CMD=${SSH_AGENT_CMD:-/usr/local/bin/ssh-agent}
SSH_ADD_CMD=${SSH_ADD_CMD:-/usr/local/bin/ssh-add}

if [[ -s "$AGENT_INFO" ]]
then
  source $AGENT_INFO
fi

other=0
if [[ -z "$SSH_AGENT_PID" ]]
then
  running=0
else
  running=0
  for u in `ps ax | grep "[s]sh-agent" | awk '{ print $1 }'`
  do
    if [[ "$running" != "1" ]]
    then
      if [[ "$SSH_AGENT_PID" != "$u" ]]
      then
        running=2
        other=$u
      else
        running=1
        echo "Agent $u Already Running"
      fi
    fi
  done
fi

if [[ "$running" != "1" ]]
then
  echo "Re-starting Agent"
  killall -15 ssh-agent
  eval `$SSH_AGENT_CMD -s -a $AGENT_SOCKET`
  echo "export SSH_AGENT_PID=$SSH_AGENT_PID" > $AGENT_INFO
  echo "export SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $AGENT_INFO
  for file in `ls -1 ~/.ssh/id_rsa`
  do
    `$SSH_ADD_CMD $file`
    if [[ $? != 0 ]]
    then
      rm $AGENT_SOCKET
      rm $AGENT_INFO

      eval `$SSH_AGENT_CMD -s -a $AGENT_SOCKET`
      echo "export SSH_AGENT_PID=$SSH_AGENT_PID" > $AGENT_INFO
      echo "export SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $AGENT_INFO
      `$SSH_ADD_CMD $file`
    fi
  done

  if [ -f /Library/Frameworks/eToken.framework/Versions/Current/libeToken.dylib ]
  then
    `$SSH_ADD_CMD -s /Library/Frameworks/eToken.framework/Versions/Current/libeToken.dylib`
  elif [ -f /usr/lib64/libeToken.so ]
  then
    `$SSH_ADD_CMD -s /usr/lib64/libeToken.so`
  fi
elif [[ "$other" != "0" ]]
then
  if ps -p $other|grep $other|grep defunct >/dev/null
  then
    echo "DEFUNCT process $other is still running"
  else
    echo "WARNING!! non defunct process $other is still running"
  fi
fi

# Test if identity is already added
`$SSH_ADD_CMD -l > /dev/null 2>&1`
if [[ $? == 1 ]]
then
  `$SSH_ADD_CMD`
fi
